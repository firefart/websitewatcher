package diff

import "strings"

templ HTMLDiff(d *Diff, body string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<style>
      body {
        font-family: monospace;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
      }

      .diff-container {
        font-family: monospace;
        max-width: 800px;
        margin: 20px auto;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      div.body {
        padding: 10px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #ddd;
        word-wrap: break-word;
      }

      div.diff {
        margin: 0;
        padding: 10px;
        word-wrap: break-word;
      }

      .line {
        display: block;
        padding: 5px 10px;
        border-left: 4px solid transparent;
      }

      .line.unchanged {
        background-color: #f8f9fa;
      }

      .line.added {
        background-color: #e6ffed;
        border-left-color: #28a745;
      }

      .line.removed {
        background-color: #ffeef0;
        border-left-color: #d73a49;
      }

      .line.metadata {
        background-color: #fffbe7;
        border-left-color: #d7bf3a;
      }
    </style>
		</head>
		<body>
			<div class="diff-container">
				if body != "" {
					<div class="body">
						for l := range strings.Lines(body) {
							<div>{ strings.TrimSpace(l) }</div>
						}
					</div>
				}
				<div class="diff">
					for _, line := range d.Lines {
						switch line.LineMode {
							case LineModeAdded:
								<div class="line added">{ line.Content }</div>
							case LineModeRemoved:
								<div class="line removed">{ line.Content }</div>
							case LineModeMetadata:
								<div class="line metadata">{ line.Content }</div>
							case LineModeUnchanged:
								<div class="line unchanged">
									// an unchanged line starts with a space to accomodate for the + and - on the other lines.
									// Convert this first space to a non-breaking space so some email clients and html
									// parsers will not remove the leading space
									// w3m for example will remove the leading space (w3m -dump <file>), but not the nbsp
									if len(line.Content) > 0 && line.Content[0] == ' ' {
										// output the raw non breaking space and the line with the first character removed
										@templ.Raw("&nbsp;")
										{ line.Content[1:] }
									} else {
										{ line.Content }
									}
								</div>
						}
					}
				</div>
			</div>
		</body>
	</html>
}
